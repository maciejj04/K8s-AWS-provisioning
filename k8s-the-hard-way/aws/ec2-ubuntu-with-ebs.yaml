# TODO: Should not expose public ip adress - use bastion host
AWSTemplateFormatVersion: '2010-09-09'
Description: "EC2 provisioning for k8s cluster"
Resources:
  K8sMaster1:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: 'eu-west-2b' # TODO: extract to vars with appropriate subnet (SubnetId)
#      Affinity: 'default' # Check what it the default value
      BlockDeviceMappings:
        - DeviceName: '/dev/sda1'
          Ebs:
            VolumeSize: 15 # in GB
      DisableApiTermination: false # this is the default
      ImageId: 'ami-0f4c8d70e56e5eb4c' #ami-0b0a60c0a2bd40612 - Ubuntu 18.04
      InstanceInitiatedShutdownBehavior: 'stop'
      InstanceType: 't3.micro'
      KeyName: 'k8s-operations'
      Monitoring: false
      SourceDestCheck: false
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          PrivateIpAddress: '10.0.1.4'
          SubnetId: 'subnet-0adff0a2cc48f0f33' # TODO: extract to vars with appropriate AvailabilityZone
          DeviceIndex: '0'
          Description: 'Primary network interface'
          GroupSet:
            - 'sg-0ff66e9c317ef7b8c' # k8s-master-internal (master)
            - 'sg-0a88a1b5d344cef64' # k8s-master-external (master)
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash
           sudo modprobe br_netfilter
           sudo swapoff -a
      Tags:
        - Key: node-type
          Value: master
        - Key: Name
          Value: k8s-master-1

  K8sMaster2:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: 'eu-west-2a' # TODO: extract to vars with appropriate subnet (SubnetId)
      BlockDeviceMappings:
        - DeviceName: '/dev/sda1'
          Ebs:
            VolumeSize: 15 # in GB
      DisableApiTermination: false # this is the default
      ImageId: 'ami-0f4c8d70e56e5eb4c' #ami-0b0a60c0a2bd40612 - Ubuntu 18.04
      InstanceInitiatedShutdownBehavior: 'stop'
      InstanceType: 't3.micro'
      KeyName: 'k8s-operations'
      Monitoring: false
      SourceDestCheck: false
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          PrivateIpAddress: '10.0.0.4'
          SubnetId: 'subnet-0525e7ef9499d1a5b' # TODO: extract to vars with appropriate AvailabilityZone
          DeviceIndex: '0'
          Description: 'Primary network interface'
          GroupSet:
            - 'sg-0ff66e9c317ef7b8c' # k8s-master-internal (master)
            - 'sg-0a88a1b5d344cef64' # k8s-master-external (master)
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash
           sudo modprobe br_netfilter
           sudo swapoff -a
      Tags:
        - Key: node-type
          Value: master
        - Key: Name
          Value: k8s-master-2


  K8sMasterFrontendLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "mj-dev-k8s-master-frontend-lb"
      Scheme: "internet-facing" # internet-facing is default
#      SecurityGroups:
#        - 'sg-0a383442095430d4f' # Not supported for network load balancer
      Subnets:
        - 'subnet-0525e7ef9499d1a5b'
        - 'subnet-0adff0a2cc48f0f33'
      Type: 'network'
      Tags:
      - Key: Name
        Value: k8s-master-lb

  ELBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref K8sMasterFrontendLB
      Port: 443
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ELBTargetGroup


  ELBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: "k8s-frontend-lb-target-group"
      Port: 6443
      Protocol: TCP
      TargetType: 'ip'
      Targets:
      - AvailabilityZone: 'eu-west-2a'
        Id: '10.0.0.4'
      - AvailabilityZone: 'eu-west-2b'
        Id: '10.0.1.4'
#        Port: '80'
      VpcId: 'vpc-039c7b915cc707025'
      Tags:
      - Key: Name
        Value: k8s-master-lb-target-group
#      HealthCheckEnabled: true
#      HealthCheckIntervalSeconds: 10
#      HealthCheckPath: /healthz #?
      HealthCheckPort: 22
      HealthCheckProtocol: TCP
#      HealthCheckTimeoutSeconds: Integer
#      HealthyThresholdCount: Integer
#      Matcher: 200-299 ?
#      UnhealthyThresholdCount: Integer

Outputs:
  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref K8sMasterFrontendLB

  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt K8sMasterFrontendLB.DNSName

  Listener:
    Description: A reference to a port 80 listener
    Value: !Ref ELBListener
