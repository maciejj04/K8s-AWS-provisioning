---
- hosts: localhost
  tasks:
  - include_vars:  # tmp
      file: ../vars/commons.yaml

  - name:
    set_fact:
      worker_ips: "{{ groups['worker-nodes'] }}"

  - name:
    set_fact:
      master_ips: "{{ groups['master-nodes'] }}"

  - name: Check mandatory variables
    fail:
      msg: "{{ item }} was not defined!"
    when: vars[item] is undefined
    loop:
      - worker_ips
      - masters_ips
      - workers_internal_ips
      - masters_internal_ips
      - k8s_public_host

  - name: Provision CA
    shell: ./generate-ca.sh

  - name: Generate single k8s tls certificate for all clients.
    shell: ./single_k8s_tls_cert.sh --workers-ips='{{ worker_ips | join(",") }}' --masters-ips='{{ master_ips | join(",") }}' --k8s-public-ip='{{ k8s_public_host }}' --workers_internal_ips='{{ workers_internal_ips }}' --masters_internal_ips='{{ masters_internal_ips }}'

#    - name: Generate admin client certificate
#      shell: ./generate-admin-client-certificate.sh
#
#    - name: Generate kubelet client certificates for each node
#      shell: ./generate-kubelet-client-certificates.sh -n="{{ item.nr }}" -i="{{ item.internal_ip }}" -e="{{ item.external_ip }}"
#      with_items: "{{ worker_nodes_info }}"

#    - name: Generate kube-controller-manager cert and ey
#      shell: ./generate-kube-controller-manager-cert-and-key.sh
#
#    - name: Generate scheduler client certificate
#      shell: ./scheduler-client-certificate.sh
#
#    - name: Generate api-server certificate
#      shell: ./generate-api-server-certificate.sh --k8s-public-adress="{{ k8s_public_adress }}" --hostnames="{{ hosts_all }}"