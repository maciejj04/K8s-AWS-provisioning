- hosts: localhost
  tasks:
    - name: Check mandatory variables
      fail:
        msg: "{{ item }} was not defined!"
      when: vars[item] is undefined
      loop:
        - etcd_download_url

    - name: Generate encryption config for etcd
      shell: ./generate_encryption_config.sh
      args:
        chdir: "{{ playbook_dir }}/encryption"

    - name: Generate kubeconfig for masters conponents
      command: "./generate_kubeconfig.sh --component-name={{ item }} --k8s-public-ip=127.0.0.1"
      args:
        chdir: "{{ playbook_dir }}/k8s_components_kubeconfigs/"
      loop:
        - kube-controller-manager
        - kube-scheduler
        - admin

- hosts: master-nodes
  name: Setup master nodes
  user: ubuntu
  tasks:
    - name: Set host index
      set_fact:
        host_idx: "{{ play_hosts.index(inventory_hostname) }}"

    - name: Copy certs, kubeconfigs and encryption config to master nodes
      copy:
        src: "{{ item.src }}"
        dest: ~/
      with_items:
        - { src: './ca_tls/ca.pem' }
        - { src: './ca_tls/kubernetes-client.pem' } #?
        - { src: './ca_tls/kubernetes-client-key.pem' }
        - { src: 'k8s_components_kubeconfigs/kube-controller-manager.kubeconfig'}
        - { src: 'k8s_components_kubeconfigs/kube-scheduler.kubeconfig'}
        - { src: 'k8s_components_kubeconfigs/admin.kubeconfig'}
        - { src: 'encryption/encryption-config.yaml'}
#      when:

    - name: Download etcd binaries
      get_url: url={{ etcd_download_url }} dest=~/
#     when:

    # TODO: Check if this works on ubuntu 18.04 machine
    - name: Extract etcd archive
      unarchive: src=etcd-v3.3.9-linux-amd64.tar.gz dest=~ remote_src=yes

    - command: pwd
      register: base_user_home
      tags:
        - etcd

    - name: Move etcd binaries
      become: true
      command: "mv {{ base_user_home.stdout }}/etcd-v3.3.9-linux-amd64/{{ item }} /usr/local/bin/"
      loop:
        - etcd
        - etcdctl

    - name: Create etcd directories
      become: true
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - /etc/etcd
        - /var/lib/etcd
      tags:
        - etcd

    - name: Copy secrets to etcd
      become: true
      copy:
        src: "{{ item.src }}"
        dest: /etc/etcd/
        remote_src: yes
      with_items:
        - { src: "{{ base_user_home.stdout }}/ca.pem" }
        - { src: "{{ base_user_home.stdout }}/kubernetes-client.pem" }
        - { src: "{{ base_user_home.stdout }}/kubernetes-client-key.pem" }
      tags:
        - etcd

    - name: Set host name
      command: hostname -s
      register: hostname

    - name: Create etcd service definition
      command: "./create_etcd_service_definition.sh --name etcd-{{host_idx}}-{{hostname.stdout}} --internal-ip {{ ansible_default_ipv4.address }}"
      args:
        chdir: "{{ playbook_dir }}/etcd"